


import mlflow
import mlflow.keras
import tensorflow as tf 

#Â ğŸ‘‰ Cela crÃ©e une nouvelle session MLflow dans laquelle tout ce que tu logs 
# (paramÃ¨tres, mÃ©triques, modÃ¨le) est enregistrÃ© dans un run visible depuis lâ€™interface web de MLflow.

with mlflow.start_run():

    # 1. Log des hyperparamÃ¨tres
    # ğŸ‘‰ Enregistrement des paramÃ¨tres de ton expÃ©rience. Cela permettra de les comparer avec dâ€™autres tests

    mlflow.log_param("model_type", "CNN")
    mlflow.log_param("epochs", 5)
    mlflow.log_param("batch_size", 32)

    # 2. ğŸ‘‰ Entrainement du CNN avec les donnÃ©es X_train, y_train. 
    # Utilisation des paramÃ¨tres dÃ©finis, avec un class_weight pour corriger le dÃ©sÃ©quilibre des classes.

    history = model.fit(
        X_train, y_train,
        epochs=5,
        batch_size=32,
        validation_data=(X_test, y_test),
        class_weight=class_weights
    )

    # 3. ğŸ‘‰ Ã‰valuation du modÃ©le sur les donnÃ©es de test. 
    # RÃ©cupÃ©ration de deux mÃ©triques : 
    # test_loss = lâ€™erreur (fonction de perte) sur les donnÃ©es de test
    # test_acc = lâ€™accuracy sur les donnÃ©es de test
    
    test_loss, test_acc = model.evaluate(X_test, y_test)

    # 4. Log des mÃ©triques
    # ğŸ‘‰ Enregistre les performances de ton modÃ¨le, que tu pourras visualiser sur le tableau de bord MLflow.
    mlflow.log_metric("test_accuracy", test_acc)
    mlflow.log_metric("test_loss", test_loss)
    # 5. Log du modÃ¨le
    # ğŸ‘‰ Sauvegarde du modÃ¨le entraÃ®nÃ© dans MLflow, avec son nom logique "cnn_model". Cela te permet de :
    # Le recharger plus tard
    # Le versionner automatiquement
    # Le dÃ©ployer si tu fais du MLOps
    


    # Exemple dâ€™input : une image test au bon format
    example_input = np.expand_dims(X_test[0], axis=0)

    # Log du modÃ¨le avec exemple d'entrÃ©e
    mlflow.keras.log_model(
    keras_model=tf.keras.models.load_model("cnn_pneumonia.h5"),
    )
    

# Pour visualiser les rÃ©sultats, lancer le serveur MLflow avec la commande suivante dans ton terminal :
# mlflow ui


